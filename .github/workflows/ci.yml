name: ci

# workflow triggers
on:
  push:
    branches:
      - '**' # every branch
    tags:
      - '**'
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  formatter:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: code formatter
        run: |
          pip install wheel
          pip install ruff
          ruff check codecov_validator/
          ruff check tests/

  test-and-build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python: [3.9, '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: install packages
        run: |
          pip install wheel
          pip install -r requirements.txt
      - name: unittest
        run: |
          python -m unittest discover -b
          python -m build

  coverage-upload:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: coverage
        run: |
          pip install wheel
          pip install -r requirements.txt
          coverage run -m unittest discover -b
          bash <(curl -s https://codecov.io/bash)

  doc-build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: doc-build
        run: |
          pip install wheel
          pip install -r docs/requirements-doc.txt
          sphinx-build -E -b html docs/source docs/_build
      - name: compress
        run: |
          apt update && apt install zip -y
          zip -r doc.zip docs/_build
          ls
      - name: store artifact
        uses: actions/upload-artifact@v4
        with:
          name: doc
          path: doc.zip
          retention-days: 1

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [formatter, test-and-build]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: deploy
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install wheel
          pip install -r requirements.txt
          python -m build
          python -m twine upload dist/*
